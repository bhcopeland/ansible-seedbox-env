{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/esm/ArrowBackIos.js","webpack:///./src/plugins/series/hooks/shows.ts","webpack:///./node_modules/@material-ui/icons/esm/Add.js","webpack:///./src/plugins/series/RemoveDialog.tsx","webpack:///./src/plugins/series/utils.ts","webpack:///./src/plugins/series/Shows/ShowCard.tsx","webpack:///./src/plugins/series/Shows/ShowList.tsx","webpack:///./src/plugins/series/types.ts","webpack:///./src/plugins/series/Shows/Header.tsx","webpack:///./src/plugins/series/Shows/AddShowDialog.tsx","webpack:///./src/plugins/series/Shows/index.tsx","webpack:///./src/plugins/series/hooks/episodes.ts","webpack:///./src/plugins/series/Episodes/Header.tsx","webpack:///./node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","webpack:///./src/plugins/series/hooks/releases.ts","webpack:///./node_modules/@material-ui/icons/esm/GetApp.js","webpack:///./src/plugins/series/Episodes/Releases.tsx","webpack:///./src/plugins/series/Episodes/EpisodeCard.tsx","webpack:///./src/plugins/series/Episodes/EpisodeList.tsx","webpack:///./src/plugins/series/Episodes/index.tsx","webpack:///./src/plugins/series/Series.tsx","webpack:///./node_modules/@material-ui/icons/esm/ExpandMore.js","webpack:///./src/common/ExpandButton.tsx"],"names":["createElement","d","Constants","createSvgIcon","actions","shows","totalCount","action","GET_SHOWS","show","ADD_SHOW","id","REMOVE_SHOW","showReducer","state","act","type","payload","filter","UPDATE_SHOW","map","item","ShowContainer","createContainer","useReducer","errorStyle","theme","css","palette","error","RemoveDialog","open","onClose","request","loading","name","handleSubmit","useCallback","e","preventDefault","ok","Dialog","fullWidth","maxWidth","onSubmit","DialogTitle","DialogContent","DialogContentText","message","DialogActions","Button","onClick","color","disabled","showToEntry","title","originalUrl","quality","seriesName","episodeToEntry","episode","identifier","seriesSeason","season","seriesEpisode","number","seriesId","heading","cardCss","actionArea","entryCard","cardActions","typography","pxToRem","spacing","ShowCard","onRemoveClick","url","useRouteMatch","Card","CardActionArea","component","Link","to","entry","beginEpisode","Typography","variant","latestEntity","latestRelease","CardActions","Tooltip","placement","IconButton","aria-label","Delete","SortByShow","ConfigState","SortByRelease","IdentifiedBy","ShowList","options","dispatch","useContainer","query","stringify","snakeCase","page","useFlexgetAPI","useEffect","resp","data","parseInt","headers","get","fn","useGetShows","useState","showId","setShowId","handleClose","undefined","Method","useRemoveShow","Grid","container","key","xs","md","lg","wrapper","input","sortByOptions","value","ShowName","label","LastDownloadDate","orderByOptions","Direction","Desc","Asc","configOptions","Configured","Unconfigured","All","Header","perPage","setFieldValue","useFormikContext","handleChangePerPage","event","target","handleChangePage","_","p","useDebounceFormikSubmit","cssString","SelectField","size","InputProps","className","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","onChangeRowsPerPage","AddShowDialog","Post","req","addShow","initialValues","values","resetForm","TextField","autoFocus","speedDialCss","ShowPage","useInjectPageTitle","useMergeState","order","sortBy","inConfig","setOptions","useOverlayState","isOpen","close","Provider","Fab","Add","episodes","GET_EPISODES","REMOVE_EPISODE","episodeReducer","REMOVE_EPISODES","EpisodeContainer","forwardRef","props","ref","classes","other","root","muiName","withStyles","position","right","top","transform","releases","GET_RELEASES","release","UPDATE_RELEASE","UPDATE_RELEASES","REMOVE_RELEASE","REMOVE_RELEASES","releaseReducer","downloaded","ReleaseContainer","Releases","FirstSeen","menuState","setMenuState","selectedRelease","anchorEl","isRemoveOpen","removeOpen","removeClose","handleMenuClose","handleMenuClick","currentTarget","episodeId","useGetReleases","releaseId","removeState","removeRelease","Put","useUpdateRelease","updateLoading","updateRelease","List","dense","ListItem","ListItemText","primary","secondary","edge","MoreVert","Menu","MenuItem","ListItemIcon","GetApp","EpisodeCard","expanded","toggle","removeReleases","useUpdateReleases","updateReleases","ExpandButton","Collapse","in","timeout","mountOnEnter","EpisodeList","useGetEpisodes","setEpisodeId","useRemoveEpisode","EpisodesPage","useParams","push","useHistory","setShow","useGetShowDetail","icon","useMemo","Component","ArrowBackIos","useSetAppBarIcon","Series","path","exact","Shows","Episodes","iconBase","transitions","create","rotate","iconCss","ExpandMore"],"mappings":"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","file":"SeriesPlugin.2e537b8c04b73fd739f5.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\"\n}), 'ArrowBackIos');","import { useReducer, useEffect, useCallback, useState } from 'react';\nimport { createContainer, useContainer } from 'unstated-next';\nimport { action } from 'utils/hooks/actions';\nimport { stringify } from 'qs';\nimport { snakeCase, Method } from 'utils/fetch';\nimport { useFlexgetAPI } from 'core/api';\nexport var Constants;\n(function (Constants) {\n    Constants[\"GET_SHOWS\"] = \"@flexget/series/GET_SHOWS\";\n    Constants[\"ADD_SHOW\"] = \"@flexget/series/ADD_SHOW\";\n    Constants[\"UPDATE_SHOW\"] = \"@flexget/series/UPDATE_SHOW\";\n    Constants[\"REMOVE_SHOW\"] = \"@flexget/series/REMOVE_SHOW\";\n})(Constants || (Constants = {}));\nexport const actions = {\n    getShows: (shows, totalCount) => action(Constants.GET_SHOWS, { shows, totalCount }),\n    addShow: (show) => action(Constants.ADD_SHOW, show),\n    updateShow: (show) => action(Constants.UPDATE_SHOW, show),\n    removeShow: (id) => action(Constants.REMOVE_SHOW, id),\n};\nconst showReducer = (state, act) => {\n    switch (act.type) {\n        case Constants.GET_SHOWS:\n            return {\n                ...act.payload,\n            };\n        case Constants.ADD_SHOW:\n            return {\n                ...state,\n                shows: [act.payload, ...state.shows],\n                totalCount: state.totalCount + 1,\n            };\n        case Constants.REMOVE_SHOW:\n            return {\n                ...state,\n                totalCount: state.totalCount - 1,\n                shows: state.shows.filter(show => show.id !== act.payload),\n            };\n        case Constants.UPDATE_SHOW:\n            return {\n                ...state,\n                shows: state.shows.map(item => {\n                    if (item.id === act.payload.id) {\n                        return act.payload;\n                    }\n                    return item;\n                }),\n            };\n        default:\n            return state;\n    }\n};\nexport const ShowContainer = createContainer(() => {\n    return useReducer(showReducer, { shows: [], totalCount: 0 });\n});\nexport const useGetShows = (options) => {\n    const [, dispatch] = useContainer(ShowContainer);\n    // NOTE: Material-UI Table Pagination uses 0 based indexing for pages, so we add\n    // one here to account for that\n    const query = stringify(snakeCase({ ...options, page: options.page + 1 }));\n    const [state, request] = useFlexgetAPI(`/series?${query}`);\n    useEffect(() => {\n        const fn = async () => {\n            const resp = await request();\n            if (resp.ok) {\n                dispatch(actions.getShows(resp.data, parseInt(resp.headers.get('total-count') ?? '0', 10)));\n            }\n        };\n        fn();\n    }, [dispatch, request]);\n    return state;\n};\nexport const useAddShow = () => {\n    const [, dispatch] = useContainer(ShowContainer);\n    const [state, request] = useFlexgetAPI('/series', Method.Post);\n    const addShow = useCallback(async (req) => {\n        const resp = await request(req);\n        if (resp.ok) {\n            dispatch(actions.addShow(resp.data));\n        }\n        return resp;\n    }, [dispatch, request]);\n    return [state, addShow];\n};\nexport const useUpdateShow = (showId) => {\n    const [, dispatch] = useContainer(ShowContainer);\n    const [state, request] = useFlexgetAPI(`/series/${showId}`, Method.Put);\n    const updateShow = useCallback(async (req) => {\n        const resp = await request(req);\n        if (resp.ok) {\n            dispatch(actions.updateShow(resp.data));\n        }\n        return resp;\n    }, [dispatch, request]);\n    return [state, updateShow];\n};\nexport const useRemoveShow = (showId) => {\n    const [, dispatch] = useContainer(ShowContainer);\n    const [state, request] = useFlexgetAPI(`/series/${showId}`, Method.Delete);\n    const removeShow = useCallback(async () => {\n        const resp = await request();\n        if (resp.ok && showId) {\n            dispatch(actions.removeShow(showId));\n        }\n        return resp;\n    }, [dispatch, request, showId]);\n    return [state, removeShow];\n};\nexport const useGetShowDetail = (showId) => {\n    const [state, request] = useFlexgetAPI(`/series/${showId}`);\n    const [show, setShow] = useState();\n    useEffect(() => {\n        const fn = async () => {\n            const resp = await request();\n            if (resp.ok) {\n                setShow(resp.data);\n            }\n        };\n        fn();\n    }, [request]);\n    return { ...state, show };\n};\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","import React, { useCallback } from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, DialogContentText, } from '@material-ui/core';\nimport { css } from '@emotion/core';\nconst errorStyle = (theme) => css `\n  color: ${theme.palette.error[500]};\n  text-align: center;\n`;\nconst RemoveDialog = ({ open = false, onClose, request, state: { error, loading }, name, }) => {\n    const handleSubmit = useCallback(async (e) => {\n        e.preventDefault();\n        const resp = await request();\n        if (resp.ok) {\n            onClose();\n        }\n    }, [onClose, request]);\n    return (<Dialog open={open} onClose={onClose} fullWidth maxWidth=\"xs\">\n      <form onSubmit={handleSubmit}>\n        <DialogTitle>Remove {name}</DialogTitle>\n        <DialogContent>\n          {error && <DialogContentText css={errorStyle}>{error.message}</DialogContentText>}\n          <DialogContentText>Are you sure you would like to remove this {name}?</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} type=\"button\">\n            Cancel\n          </Button>\n          <Button type=\"submit\" color=\"primary\" disabled={loading}>\n            Remove\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>);\n};\nexport default RemoveDialog;\n","export const showToEntry = (show) => ({\n    title: show.name,\n    originalUrl: '',\n    quality: 'unknown',\n    seriesName: show.name,\n});\nexport const episodeToEntry = (show, episode) => ({\n    title: episode.identifier,\n    originalUrl: '',\n    quality: 'unknown',\n    seriesName: show.name,\n    seriesSeason: episode.season,\n    seriesEpisode: episode.number,\n    seriesId: episode.identifier,\n});\n","import React from 'react';\nimport { useRouteMatch } from 'react-router';\nimport { css } from '@emotion/core';\nimport { Card, CardActionArea, CardActions, IconButton, Tooltip, Typography, } from '@material-ui/core';\nimport { Delete } from '@material-ui/icons';\nimport Entry from 'core/entry/cards';\nimport { Link } from 'common/styles';\nimport { showToEntry } from '../utils';\nconst heading = css `\n  font-weight: 500;\n`;\nconst cardCss = css `\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  height: 100%;\n`;\nconst actionArea = css `\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\nconst entryCard = css `\n  flex: 1;\n  width: 100%;\n`;\nconst cardActions = (theme) => css `\n  padding-left: ${theme.typography.pxToRem(theme.spacing(3))};\n  justify-content: space-between;\n`;\nconst ShowCard = ({ show, onRemoveClick }) => {\n    const { url } = useRouteMatch();\n    return (<Card css={cardCss}>\n      <CardActionArea css={actionArea} component={Link} to={`${url}/${show.id}`}>\n        <Entry entry={showToEntry(show)} css={entryCard}>\n          {!!show.beginEpisode && (<Typography variant=\"body2\" color=\"textSecondary\">\n              <Typography variant=\"body2\" css={heading} color=\"textPrimary\" component=\"span\">\n                Begin Episode:\n              </Typography>{' '}\n              {show.beginEpisode.identifier}\n            </Typography>)}\n          {!!show.latestEntity && (<Typography variant=\"body2\" color=\"textSecondary\">\n              <Typography variant=\"body2\" color=\"textPrimary\" component=\"span\" css={heading}>\n                Latest Release:\n              </Typography>{' '}\n              {show.latestEntity.identifier} ({show.latestEntity.latestRelease?.quality})\n            </Typography>)}\n        </Entry>\n      </CardActionArea>\n      <CardActions css={cardActions}>\n        <span />\n        <span>\n          <Tooltip title=\"Remove\" placement=\"top\">\n            <IconButton aria-label=\"remove\" onClick={onRemoveClick}>\n              <Delete />\n            </IconButton>\n          </Tooltip>\n        </span>\n      </CardActions>\n    </Card>);\n};\nexport default ShowCard;\n","import React, { useState, useCallback } from 'react';\nimport { useContainer } from 'unstated-next';\nimport { Grid } from '@material-ui/core';\nimport RemoveDialog from '../RemoveDialog';\nimport { useGetShows, ShowContainer, useRemoveShow } from '../hooks/shows';\nimport ShowCard from './ShowCard';\nconst ShowList = ({ options }) => {\n    useGetShows(options);\n    const [{ shows }] = useContainer(ShowContainer);\n    const [showId, setShowId] = useState();\n    const handleClose = useCallback(() => setShowId(undefined), []);\n    const [state, request] = useRemoveShow(showId);\n    return (<>\n      <Grid container spacing={2}>\n        {shows.map(show => (<Grid item key={show.id} xs={12} md={6} lg={4}>\n            <ShowCard show={show} onRemoveClick={() => setShowId(showId)}/>\n          </Grid>))}\n      </Grid>\n      <RemoveDialog open={!!showId} onClose={handleClose} request={request} state={state} name=\"Show\"/>\n    </>);\n};\nexport default ShowList;\n","export var SortByShow;\n(function (SortByShow) {\n    SortByShow[\"ShowName\"] = \"show_name\";\n    SortByShow[\"LastDownloadDate\"] = \"last_download_date\";\n})(SortByShow || (SortByShow = {}));\nexport var ConfigState;\n(function (ConfigState) {\n    ConfigState[\"Configured\"] = \"configured\";\n    ConfigState[\"Unconfigured\"] = \"unconfigured\";\n    ConfigState[\"All\"] = \"all\";\n})(ConfigState || (ConfigState = {}));\nexport var SortByRelease;\n(function (SortByRelease) {\n    SortByRelease[\"FirstSeen\"] = \"first_seen\";\n    SortByRelease[\"Downoaded\"] = \"downloaded\";\n    SortByRelease[\"ProperCount\"] = \"proper_count\";\n    SortByRelease[\"Title\"] = \"title\";\n})(SortByRelease || (SortByRelease = {}));\nexport var IdentifiedBy;\n(function (IdentifiedBy) {\n    IdentifiedBy[\"Ep\"] = \"ep\";\n    IdentifiedBy[\"Sequence\"] = \"sequence\";\n    IdentifiedBy[\"Date\"] = \"date\";\n})(IdentifiedBy || (IdentifiedBy = {}));\n","import React from 'react';\nimport { TablePagination } from '@material-ui/core';\nimport { css, ClassNames } from '@emotion/core';\nimport SelectField from 'common/inputs/formik/SelectField';\nimport { useContainer } from 'unstated-next';\nimport { useFormikContext } from 'formik';\nimport { useDebounceFormikSubmit } from 'utils/hooks';\nimport { Direction } from 'utils/query';\nimport { SortByShow, ConfigState } from '../types';\nimport { ShowContainer } from '../hooks/shows';\nconst wrapper = (theme) => css `\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: ${theme.typography.pxToRem(theme.spacing(2))};\n  align-items: center;\n`;\nconst container = css `\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n`;\nconst item = (theme) => css `\n  margin-left: ${theme.typography.pxToRem(theme.spacing(2))};\n  margin-right: ${theme.typography.pxToRem(theme.spacing(2))};\n`;\nconst input = css `\n  font-size: inherit;\n`;\nconst sortByOptions = [\n    {\n        value: SortByShow.ShowName,\n        label: 'Show Name',\n    },\n    {\n        value: SortByShow.LastDownloadDate,\n        label: 'Last Download Date',\n    },\n];\nconst orderByOptions = [\n    {\n        value: Direction.Desc,\n        label: 'Desc',\n    },\n    {\n        value: Direction.Asc,\n        label: 'Asc',\n    },\n];\nconst configOptions = [\n    {\n        value: ConfigState.Configured,\n        label: 'Configured',\n    },\n    {\n        value: ConfigState.Unconfigured,\n        label: 'Unconfigured',\n    },\n    {\n        value: ConfigState.All,\n        label: 'All Shows',\n    },\n];\nconst Header = ({ options: { page, perPage } }) => {\n    const [{ totalCount }] = useContainer(ShowContainer);\n    const { setFieldValue } = useFormikContext();\n    const handleChangePerPage = (event) => {\n        setFieldValue('perPage', parseInt(event.target.value, 10));\n        setFieldValue('page', 0);\n    };\n    const handleChangePage = (_, p) => {\n        setFieldValue('page', p);\n    };\n    useDebounceFormikSubmit();\n    return (<>\n      <ClassNames>\n        {({ css: cssString }) => (<div css={wrapper}>\n            <div css={container}/>\n            <div css={container}>\n              <SelectField label=\"Configured\" name=\"inConfig\" id=\"inConfig\" size=\"small\" InputProps={{ className: cssString(input) }} options={configOptions}/>\n              <SelectField css={item} label=\"Sort By\" name=\"sortBy\" id=\"sortBy\" size=\"small\" InputProps={{ className: cssString(input) }} options={sortByOptions}/>\n              <SelectField css={item} label=\"Order\" name=\"order\" id=\"order\" size=\"small\" InputProps={{ className: cssString(input) }} options={orderByOptions}/>\n\n              <TablePagination rowsPerPageOptions={[30, 60, 90]} count={totalCount} rowsPerPage={perPage} page={page} onChangePage={handleChangePage} onChangeRowsPerPage={handleChangePerPage} component=\"div\"/>\n            </div>\n          </div>)}\n      </ClassNames>\n    </>);\n};\nexport default Header;\n","import React from 'react';\nimport { css } from '@emotion/core';\nimport TextField from 'common/inputs/formik/TextField';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, DialogContentText, } from '@material-ui/core';\nimport { Form, Formik } from 'formik';\nimport { useAddShow } from '../hooks/shows';\nconst errorStyle = (theme) => css `\n  color: ${theme.palette.error[500]};\n  text-align: center;\n`;\nconst AddShowDialog = ({ open = false, onClose }) => {\n    const initialValues = {\n        beginEpisode: '',\n        name: '',\n    };\n    const [{ loading, error }, addShow] = useAddShow();\n    return (<Dialog open={open} onClose={onClose} fullWidth maxWidth=\"xs\">\n      <DialogTitle>Add New Show</DialogTitle>\n\n      <Formik initialValues={initialValues} onSubmit={async (values, actions) => {\n        const resp = await addShow(values);\n        if (resp.ok) {\n            actions.resetForm();\n            onClose();\n        }\n    }}>\n        <Form>\n          <DialogContent>\n            {error && <DialogContentText css={errorStyle}>{error.message}</DialogContentText>}\n            <TextField id=\"name\" label=\"Name\" fullWidth name=\"name\" autoFocus/>\n            <TextField id=\"beginEpisode\" label=\"Begin Episode\" fullWidth name=\"beginEpisode\"/>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onClose} type=\"button\">\n              Cancel\n            </Button>\n            <Button type=\"submit\" color=\"primary\" disabled={loading}>\n              Add\n            </Button>\n          </DialogActions>\n        </Form>\n      </Formik>\n    </Dialog>);\n};\nexport default AddShowDialog;\n","import React, { useCallback } from 'react';\nimport { css } from '@emotion/core';\nimport { Fab } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { useInjectPageTitle } from 'core/layout/AppBar/hooks';\nimport { Direction } from 'utils/query';\nimport { useMergeState, useOverlayState } from 'utils/hooks';\nimport { Formik } from 'formik';\nimport { ShowContainer } from '../hooks/shows';\nimport ShowList from './ShowList';\nimport { SortByShow, ConfigState } from '../types';\nimport Header from './Header';\nimport AddShowDialog from './AddShowDialog';\nconst speedDialCss = (theme) => css `\n  position: absolute;\n  bottom: ${theme.typography.pxToRem(theme.spacing(2))};\n  right: ${theme.typography.pxToRem(theme.spacing(2))};\n`;\nconst ShowPage = () => {\n    useInjectPageTitle('Series');\n    const [options, setOptions] = useMergeState({\n        page: 0,\n        perPage: 30,\n        order: Direction.Desc,\n        sortBy: SortByShow.ShowName,\n        inConfig: ConfigState.Configured,\n    });\n    const handleSubmit = useCallback(values => setOptions(values), [setOptions]);\n    const [isOpen, { close, open }] = useOverlayState();\n    return (<ShowContainer.Provider>\n      <Formik initialValues={options} onSubmit={handleSubmit}>\n        <Header options={options}/>\n      </Formik>\n      <ShowList options={options}/>\n      <Fab aria-label=\"Add\" onClick={open} css={speedDialCss} color=\"primary\">\n        <Add />\n      </Fab>\n      <AddShowDialog open={isOpen} onClose={close}/>\n    </ShowContainer.Provider>);\n};\nexport default ShowPage;\n","import { useReducer, useEffect, useCallback } from 'react';\nimport { createContainer, useContainer } from 'unstated-next';\nimport { action } from 'utils/hooks/actions';\nimport { stringify } from 'qs';\nimport { snakeCase, Method } from 'utils/fetch';\nimport { useFlexgetAPI } from 'core/api';\nexport var Constants;\n(function (Constants) {\n    Constants[\"GET_EPISODES\"] = \"@flexget/series/GET_EPISODES\";\n    Constants[\"REMOVE_EPISODE\"] = \"@flexget/series/REMOVE_EPISODE\";\n    Constants[\"REMOVE_EPISODES\"] = \"@flexget/series/REMOVE_EPISODES\";\n})(Constants || (Constants = {}));\nexport const actions = {\n    getEpisodes: (episodes, totalCount) => action(Constants.GET_EPISODES, { episodes, totalCount }),\n    removeEpisode: (id) => action(Constants.REMOVE_EPISODE, id),\n    removeEpisodes: () => action(Constants.REMOVE_EPISODES),\n};\nconst episodeReducer = (state, act) => {\n    switch (act.type) {\n        case Constants.GET_EPISODES:\n            return {\n                ...act.payload,\n            };\n        case Constants.REMOVE_EPISODE:\n            return {\n                totalCount: state.totalCount - 1,\n                episodes: state.episodes.filter(episode => episode.id !== act.payload),\n            };\n        case Constants.REMOVE_EPISODES:\n            return {\n                totalCount: 0,\n                episodes: [],\n            };\n        default:\n            return state;\n    }\n};\nexport const EpisodeContainer = createContainer(() => {\n    return useReducer(episodeReducer, { episodes: [], totalCount: 0 });\n});\nexport const useGetEpisodes = (showId, options) => {\n    const [, dispatch] = useContainer(EpisodeContainer);\n    // NOTE: Material-UI Table Pagination uses 0 based indexing for pages, so we add\n    // one here to account for that\n    const query = stringify(snakeCase({ ...options, page: options.page + 1 }));\n    const [state, request] = useFlexgetAPI(`/series/${showId}/episodes?${query}`);\n    useEffect(() => {\n        if (showId) {\n            const fn = async () => {\n                const resp = await request();\n                if (resp.ok) {\n                    dispatch(actions.getEpisodes(resp.data, parseInt(resp.headers.get('total-count') ?? '0', 10)));\n                }\n            };\n            fn();\n        }\n    }, [dispatch, request, showId]);\n    return state;\n};\nexport const useRemoveEpisode = (showId, episodeId) => {\n    const [, dispatch] = useContainer(EpisodeContainer);\n    const [state, request] = useFlexgetAPI(`/series/${showId}/episodes/${episodeId}`, Method.Delete);\n    const removeEpisode = useCallback(async () => {\n        const resp = await request();\n        if (resp.ok && episodeId) {\n            dispatch(actions.removeEpisode(episodeId));\n        }\n        return resp;\n    }, [dispatch, episodeId, request]);\n    return [state, removeEpisode];\n};\nexport const useRemoveEpisodes = (showId) => {\n    const [, dispatch] = useContainer(EpisodeContainer);\n    const [state, request] = useFlexgetAPI(`/series/${showId}/episodes`, Method.Delete);\n    const removeEpisodes = useCallback(async () => {\n        const resp = await request();\n        if (resp.ok) {\n            dispatch(actions.removeEpisodes());\n        }\n        return resp;\n    }, [dispatch, request]);\n    return [state, removeEpisodes];\n};\n","import React from 'react';\nimport { TablePagination } from '@material-ui/core';\nimport { css, ClassNames } from '@emotion/core';\nimport SelectField from 'common/inputs/formik/SelectField';\nimport { useContainer } from 'unstated-next';\nimport { useFormikContext } from 'formik';\nimport { useDebounceFormikSubmit } from 'utils/hooks';\nimport { Direction } from 'utils/query';\nimport { EpisodeContainer } from '../hooks/episodes';\nconst wrapper = (theme) => css `\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: ${theme.typography.pxToRem(theme.spacing(2))};\n  align-items: center;\n`;\nconst container = css `\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n`;\nconst item = (theme) => css `\n  margin-left: ${theme.typography.pxToRem(theme.spacing(2))};\n  margin-right: ${theme.typography.pxToRem(theme.spacing(2))};\n`;\nconst input = css `\n  font-size: inherit;\n`;\nconst orderByOptions = [\n    {\n        value: Direction.Desc,\n        label: 'Desc',\n    },\n    {\n        value: Direction.Asc,\n        label: 'Asc',\n    },\n];\nconst Header = ({ options: { page, perPage } }) => {\n    const [{ totalCount }] = useContainer(EpisodeContainer);\n    const { setFieldValue } = useFormikContext();\n    const handleChangePerPage = (event) => {\n        setFieldValue('perPage', parseInt(event.target.value, 10));\n        setFieldValue('page', 0);\n    };\n    const handleChangePage = (_, p) => {\n        setFieldValue('page', p);\n    };\n    useDebounceFormikSubmit();\n    return (<ClassNames>\n      {({ css: cssString }) => (<div css={wrapper}>\n          <div css={container}/>\n          <div css={container}>\n            <SelectField css={item} label=\"Order\" name=\"order\" id=\"order\" size=\"small\" InputProps={{ className: cssString(input) }} options={orderByOptions}/>\n            <TablePagination rowsPerPageOptions={[30, 60, 90]} count={totalCount} rowsPerPage={perPage} page={page} onChangePage={handleChangePage} onChangeRowsPerPage={handleChangePerPage} component=\"div\"/>\n          </div>\n        </div>)}\n    </ClassNames>);\n};\nexport default Header;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import { useReducer, useEffect, useCallback } from 'react';\nimport { createContainer, useContainer } from 'unstated-next';\nimport { action } from 'utils/hooks/actions';\nimport { stringify } from 'qs';\nimport { snakeCase, Method } from 'utils/fetch';\nimport { useFlexgetAPI } from 'core/api';\nexport var Constants;\n(function (Constants) {\n    Constants[\"GET_RELEASES\"] = \"@flexget/series/GET_RELEASES\";\n    Constants[\"UPDATE_RELEASE\"] = \"@flexget/series/UPDATE_RELEASE\";\n    Constants[\"UPDATE_RELEASES\"] = \"@flexget/series/UPDATE_RELEASES\";\n    Constants[\"REMOVE_RELEASE\"] = \"@flexget/series/REMOVE_RELEASE\";\n    Constants[\"REMOVE_RELEASES\"] = \"@flexget/series/REMOVE_RELEASES\";\n})(Constants || (Constants = {}));\nexport const actions = {\n    getReleases: (releases, totalCount) => action(Constants.GET_RELEASES, { releases, totalCount }),\n    updateRelease: (release) => action(Constants.UPDATE_RELEASE, release),\n    updateReleases: () => action(Constants.UPDATE_RELEASES),\n    removeRelease: (id) => action(Constants.REMOVE_RELEASE, id),\n    removeReleases: () => action(Constants.REMOVE_RELEASES),\n};\nconst releaseReducer = (state, act) => {\n    switch (act.type) {\n        case Constants.GET_RELEASES:\n            return {\n                ...act.payload,\n            };\n        case Constants.UPDATE_RELEASE:\n            return {\n                ...state,\n                releases: state.releases.map(release => {\n                    if (release.id === act.payload.id) {\n                        return act.payload;\n                    }\n                    return release;\n                }),\n            };\n        case Constants.UPDATE_RELEASES:\n            return {\n                ...state,\n                releases: state.releases.map(release => ({\n                    ...release,\n                    downloaded: false,\n                })),\n            };\n        case Constants.REMOVE_RELEASE:\n            return {\n                totalCount: state.totalCount - 1,\n                releases: state.releases.filter(release => release.id !== act.payload),\n            };\n        case Constants.REMOVE_RELEASES:\n            return {\n                totalCount: 0,\n                releases: [],\n            };\n        default:\n            return state;\n    }\n};\nexport const ReleaseContainer = createContainer(() => {\n    return useReducer(releaseReducer, { releases: [], totalCount: 0 });\n});\nexport const useGetReleases = (showId, episodeId, options) => {\n    const [, dispatch] = useContainer(ReleaseContainer);\n    // NOTE: Material-UI Table Pagination uses 0 based indexing for pages, so we add\n    // one here to account for that\n    const query = stringify(snakeCase({ ...options, page: options.page + 1 }));\n    const [state, request] = useFlexgetAPI(`/series/${showId}/episodes/${episodeId}/releases?${query}`);\n    useEffect(() => {\n        const fn = async () => {\n            const resp = await request();\n            if (resp.ok) {\n                dispatch(actions.getReleases(resp.data, parseInt(resp.headers.get('total-count') ?? '0', 10)));\n            }\n        };\n        fn();\n    }, [dispatch, request]);\n    return state;\n};\nexport const useUpdateRelease = (showId, episodeId, releaseId) => {\n    const [, dispatch] = useContainer(ReleaseContainer);\n    const [state, request] = useFlexgetAPI(`/series/${showId}/episodes/${episodeId}/releases/${releaseId}`, Method.Put);\n    const updateRelease = useCallback(async () => {\n        const resp = await request();\n        if (resp.ok) {\n            dispatch(actions.updateRelease(resp.data));\n        }\n        return resp;\n    }, [dispatch, request]);\n    return [state, updateRelease];\n};\nexport const useUpdateReleases = (showId, episodeId) => {\n    const [, dispatch] = useContainer(ReleaseContainer);\n    const [state, request] = useFlexgetAPI(`/series/${showId}/episodes/${episodeId}/releases`, Method.Put);\n    const updateReleases = useCallback(async () => {\n        const resp = await request();\n        if (resp.ok) {\n            dispatch(actions.updateReleases());\n        }\n        return resp;\n    }, [dispatch, request]);\n    return [state, updateReleases];\n};\nexport const useRemoveRelease = (showId, episodeId, releaseId) => {\n    const [, dispatch] = useContainer(ReleaseContainer);\n    const [state, request] = useFlexgetAPI(`/series/${showId}/episodes/${episodeId}/releases/${releaseId}`, Method.Delete);\n    const removeRelease = useCallback(async () => {\n        const resp = await request();\n        if (resp.ok && releaseId) {\n            dispatch(actions.removeRelease(releaseId));\n        }\n        return resp;\n    }, [dispatch, releaseId, request]);\n    return [state, removeRelease];\n};\nexport const useRemoveReleases = (showId, episodeId) => {\n    const [, dispatch] = useContainer(ReleaseContainer);\n    const [state, request] = useFlexgetAPI(`/series/${showId}/episodes/${episodeId}/releases`, Method.Delete);\n    const removeReleases = useCallback(async () => {\n        const resp = await request();\n        if (resp.ok) {\n            dispatch(actions.removeReleases());\n        }\n        return resp;\n    }, [dispatch, request]);\n    return [state, removeReleases];\n};\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');","import React, { useState, useCallback } from 'react';\nimport { useContainer } from 'unstated-next';\nimport { List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, Menu, MenuItem, ListItemIcon, } from '@material-ui/core';\nimport { useMergeState, useOverlayState } from 'utils/hooks';\nimport { Direction } from 'utils/query';\nimport { GetApp, Delete, MoreVert } from '@material-ui/icons';\nimport RemoveDialog from 'plugins/series/RemoveDialog';\nimport { ReleaseContainer, useGetReleases, useRemoveRelease, useUpdateRelease, } from '../hooks/releases';\nimport { SortByRelease } from '../types';\nconst Releases = ({ show, episode }) => {\n    const [{ releases }] = useContainer(ReleaseContainer);\n    const [options] = useMergeState({\n        page: 0,\n        perPage: 50,\n        order: Direction.Desc,\n        sortBy: SortByRelease.FirstSeen,\n    });\n    const [menuState, setMenuState] = useState();\n    const { release: selectedRelease, anchorEl } = menuState ?? {};\n    const [isRemoveOpen, { open: removeOpen, close: removeClose }] = useOverlayState();\n    const handleMenuClose = useCallback(() => setMenuState(undefined), []);\n    const handleMenuClick = useCallback((release, event) => setMenuState({\n        anchorEl: event.currentTarget,\n        release,\n    }), []);\n    useGetReleases(show.id, episode.id, options);\n    const [removeState, removeRelease] = useRemoveRelease(show.id, episode.id, selectedRelease?.id);\n    const [{ loading: updateLoading }, updateRelease] = useUpdateRelease(show.id, episode.id, selectedRelease?.id);\n    return (<List dense>\n      {releases.map(release => (<ListItem key={release.id}>\n          <ListItemText primary={release.title} secondary={release.quality}/>\n          <ListItemSecondaryAction>\n            <IconButton edge=\"end\" onClick={e => handleMenuClick(release, e)} aria-label=\"View More\">\n              <MoreVert />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>))}\n      <Menu anchorEl={anchorEl} open={!!anchorEl} onClose={handleMenuClose}>\n        <MenuItem onClick={updateRelease} disabled={updateLoading || !selectedRelease?.downloaded}>\n          <ListItemIcon>\n            <GetApp />\n          </ListItemIcon>\n          Reset Release\n        </MenuItem>\n        <MenuItem onClick={removeOpen}>\n          <ListItemIcon>\n            <Delete />\n          </ListItemIcon>\n          Delete Release\n        </MenuItem>\n      </Menu>\n      <RemoveDialog open={isRemoveOpen} onClose={removeClose} state={removeState} request={removeRelease} name=\"Release\"/>\n    </List>);\n};\nexport default Releases;\n","import React from 'react';\nimport { css } from '@emotion/core';\nimport { Card, CardActions, Collapse, Button } from '@material-ui/core';\nimport Entry from 'core/entry/cards';\nimport ExpandButton from 'common/ExpandButton';\nimport { useOverlayState } from 'utils/hooks';\nimport RemoveDialog from 'plugins/series/RemoveDialog';\nimport Releases from './Releases';\nimport { episodeToEntry } from '../utils';\nimport { useUpdateReleases, useRemoveReleases } from '../hooks/releases';\nconst cardCss = css `\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  height: 100%;\n`;\nconst entryCard = css `\n  flex: 1;\n  width: 100%;\n`;\nconst cardActions = (theme) => css `\n  padding-left: ${theme.typography.pxToRem(theme.spacing(3))};\n  justify-content: space-between;\n`;\nconst EpisodeCard = ({ show, episode, onRemoveClick }) => {\n    const [expanded, { toggle }] = useOverlayState();\n    const [isRemoveOpen, { open: removeOpen, close: removeClose }] = useOverlayState();\n    const [removeState, removeReleases] = useRemoveReleases(show.id, episode.id);\n    const [{ loading: updateLoading }, updateReleases] = useUpdateReleases(show.id, episode.id);\n    return (<Card css={cardCss}>\n      <Entry entry={episodeToEntry(show, episode)} css={entryCard}/>\n      <CardActions css={cardActions}>\n        <span>\n          <Button onClick={removeOpen} color=\"primary\" size=\"small\">\n            Delete Releases\n          </Button>\n          <Button onClick={updateReleases} disabled={updateLoading} size=\"small\" color=\"primary\">\n            Reset Releases\n          </Button>\n        </span>\n        <span>\n          <Button onClick={onRemoveClick} color=\"primary\" size=\"small\">\n            Delete Episode\n          </Button>\n          <ExpandButton open={expanded} onClick={toggle}/>\n        </span>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" mountOnEnter>\n        <Releases show={show} episode={episode}/>\n      </Collapse>\n      <RemoveDialog open={isRemoveOpen} onClose={removeClose} state={removeState} request={removeReleases} name=\"Releases\"/>\n    </Card>);\n};\nexport default EpisodeCard;\n","import React, { useState, useCallback } from 'react';\nimport { useContainer } from 'unstated-next';\nimport { Grid } from '@material-ui/core';\nimport RemoveDialog from '../RemoveDialog';\nimport { EpisodeContainer, useGetEpisodes, useRemoveEpisode } from '../hooks/episodes';\nimport EpisodeCard from './EpisodeCard';\nimport { ReleaseContainer } from '../hooks/releases';\nconst EpisodeList = ({ show, options }) => {\n    useGetEpisodes(show?.id, options);\n    const [{ episodes }] = useContainer(EpisodeContainer);\n    const [episodeId, setEpisodeId] = useState();\n    const handleClose = useCallback(() => setEpisodeId(undefined), []);\n    const [state, request] = useRemoveEpisode(show?.id, episodeId);\n    if (!show) {\n        return null;\n    }\n    return (<>\n      <Grid container spacing={2}>\n        {episodes.map(episode => (<Grid item key={episode.id} xs={12} md={6} lg={4}>\n            <ReleaseContainer.Provider>\n              <EpisodeCard show={show} episode={episode} onRemoveClick={() => setEpisodeId(episode.id)}/>\n            </ReleaseContainer.Provider>\n          </Grid>))}\n      </Grid>\n      <RemoveDialog open={!!episodeId} onClose={handleClose} request={request} state={state} name=\"Episode\"/>\n    </>);\n};\nexport default EpisodeList;\n","import React, { useCallback, useMemo } from 'react';\nimport { useParams, useHistory } from 'react-router';\nimport { Formik } from 'formik';\nimport { useInjectPageTitle, useSetAppBarIcon } from 'core/layout/AppBar/hooks';\nimport { Direction } from 'utils/query';\nimport { useMergeState } from 'utils/hooks';\nimport { ArrowBackIos } from '@material-ui/icons';\nimport { EpisodeContainer } from '../hooks/episodes';\nimport Header from './Header';\nimport EpisodeList from './EpisodeList';\nimport { useGetShowDetail } from '../hooks/shows';\nconst EpisodesPage = () => {\n    const showId = parseInt(useParams().showId, 10);\n    const { push } = useHistory();\n    const { show } = useGetShowDetail(showId);\n    const title = show ? `${show.name} - Episodes` : 'Episodes';\n    const onClick = useCallback(() => {\n        push('/series');\n    }, [push]);\n    const icon = useMemo(() => ({\n        Component: ArrowBackIos,\n        onClick,\n        label: 'go back',\n    }), [onClick]);\n    useInjectPageTitle(title);\n    useSetAppBarIcon(icon);\n    const [options, setOptions] = useMergeState({\n        page: 0,\n        perPage: 30,\n        order: Direction.Desc,\n    });\n    const handleSubmit = useCallback(values => setOptions(values), [setOptions]);\n    return (<EpisodeContainer.Provider>\n      <Formik initialValues={options} onSubmit={handleSubmit}>\n        <Header options={options}/>\n      </Formik>\n      <EpisodeList show={show} options={options}/>\n    </EpisodeContainer.Provider>);\n};\nexport default EpisodesPage;\n","import React from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport { Route, Switch, useRouteMatch } from 'react-router';\nimport Shows from './Shows';\nimport Episodes from './Episodes';\nconst Series = () => {\n    const { path } = useRouteMatch();\n    return (<Switch>\n      <Route exact path={path} component={Shows}/>\n      <Route exact path={`${path}/:showId`} component={Episodes}/>\n    </Switch>);\n};\nexport default hot(Series);\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","import React, { useCallback, forwardRef } from 'react';\nimport { css } from '@emotion/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport { IconButton } from '@material-ui/core';\nconst iconBase = (theme) => css `\n  transition: ${theme.transitions.create(['transform'])};\n`;\nconst rotate = css `\n  transform: rotate(180deg);\n`;\nconst ExpandButton = forwardRef(({ open, ...props }, ref) => {\n    const iconCss = useCallback((theme) => [iconBase(theme), open && rotate], [open]);\n    return (<IconButton {...props} css={iconCss} ref={ref}>\n      <ExpandMore />\n    </IconButton>);\n});\nexport default ExpandButton;\n"],"sourceRoot":""}