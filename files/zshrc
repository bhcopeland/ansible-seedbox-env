# Path to your oh-my-zsh installation.
ZSH=/usr/share/oh-my-zsh/

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
#ZSH_THEME="tjkirch_mod"
ZSH_THEME="agnoster"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

export XDG_CURRENT_DESKTOP=i3

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
#plugins=(git cp archlinux dircycle gpg-agent jira pip python ssh-agent systemd websearch)

plugins=(git git-extras cp archlinux gpg-agent pip python systemd ssh-agent aws docker pass dirhistory dirpersist virtualenv)

# User configuration

#export PATH=$HOME/bin:/usr/local/bin:$PATH:/home/ben/Linaro/git-gpgcrypt/
#export PATH="$(ruby -e 'print Gem.user_dir')/bin:$PATH"

#export STEAM_FRAME_FORCE_CLOSE=1
# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
#if [[ -n $SSH_CONNECTION ]]; then
export EDITOR='vim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

ZSH_CACHE_DIR=$HOME/.oh-my-zsh-cache
if [[ ! -d $ZSH_CACHE_DIR ]]; then
  mkdir $ZSH_CACHE_DIR
fi

source $ZSH/oh-my-zsh.sh

if [ -e /usr/share/terminfo/x/xterm-256color ]; then
        export TERM='xterm-256color'
else
        export TERM='xterm-color'
fi

# Pretty terminal welcome
#if [ -f /usr/bin/screenfetch ]; then
#	screenfetch -t
#fi
#if [ -f /usr/bin/archey3 ]; then
#	/usr/bin/archey3
#fi

#alsi

#TZ='Europe/London'; export TZ

# Pacman alias examples from https://wiki.archlinux.org/index.php/Pacman_tips#Configure_the_shell

alias pacupg='sudo pacman -Syu'		# Synchronize with repositories and then upgrade packages that are out of date on the local system.
alias pacdl='pacman -Sw'		# Download specified package(s) as .tar.xz ball
alias pacin='sudo pacman -S'		# Install specific package(s) from the repositories
alias pacins='sudo pacman -U'		# Install specific package not from the repositories but from a file
alias pacre='sudo pacman -R'		# Remove the specified package(s), retaining its configuration(s) and required dependencies
alias pacrem='sudo pacman -Rns'		# Remove the specified package(s), its configuration(s) and unneeded dependencies
alias pacrems='sudo pacman -Rdd'	# Remove pacakge and IGNORE dependencies
alias pacrep='pacman -Si'		# Display information about a given package in the repositories
alias pacreps='pacman -Ss'		# Search for package(s) in the repositories
alias pacloc='pacman -Qi'		# Display information about a given package in the local database
alias paclocs='pacman -Qs'		# Search for package(s) in the local database
alias paclo="pacman -Qdt"		# List all packages which are orphaned
alias pacc="sudo pacman -Scc"		# Clean cache - delete all the package files in the cache
alias paclf="pacman -Ql"		# List all files installed by a given package
alias pacown="pacman -Qo"		# Show package(s) owning the specified file(s)
alias pacexpl="pacman -D --asexp"	# Mark one or more installed packages as explicitly installed
alias pacimpl="pacman -D --asdep"	# Mark one or more installed packages as non explicitly installed
# Additional pacman alias examples
alias pacupd='sudo pacman -Sy && sudo abs'         # Update and refresh the local package and ABS databases against repositories
alias pacinsd='sudo pacman -S --asdeps'            # Install given package(s) as dependencies
alias pacmir='sudo pacman -Syy'                    # Force refresh of all package lists after updating /etc/pacman.d/mirrorlist
#alias pacup='sudo reflector --protocol http --verbose --latest 5 --sort rate --save /etc/pacman.d/mirrorlist && sudo pacman -Syuu && pacaur -uS --noedit'
alias pacup='sudo reflector --protocol http --verbose --latest 5 --sort rate --save /etc/pacman.d/mirrorlist && sudo pacman -Syuu && trizen -aSyuu --noedit'
alias pacclean='sudo pacman -R $(pacman -Qdtq)'

# Personal
alias history='history 1 10000000'
alias vi='vim'
alias econky='vim ~/.i3/.i3-conkyrc'
alias edit_polybar='vim ~/.config/polybar/config'
alias edit_i3='vim ~/.i3/config'
alias edit_ssh='vim ~/.ssh/config'
alias edit_zsh='vim ~/.zshrc'
alias edit_vim='vim ~/.vimrc'
alias wp='screen -d -m /usr/bin/whatpulse'
alias airplane-on='sudo rfkill block all | sudo systemctl stop docker.service | sudo ip link set dev docker0 down'
alias airplane-off='sudo rfkill unblock all | sudo systemctl start docker.service | sudo ip link set dev docker0 up'
alias vpn='sudo openvpn /home/ben/vpn/config.ovpn'
alias vpn-pst='sudo openvpn /home/ben/vpn/config-pst.ovpn'
alias gphoto-import='mkdir -p /media/nfs/data/Photos/`date +%Y`/`date -I` && cd /media/nfs/data/Photos/`date +%Y`/`date -I` && gphoto2 --get-all-files'
alias gphoto-local-import='mkdir -p /home/ben/Photos/`date +%Y`/`date -I` && cd /home/ben/Photos/`date +%Y`/`date -I` && gphoto2 --get-all-files'
alias psmem='sudo python2.7 /home/ben/Scripts/ps_mem.py'
alias pss='ps aux | less'
alias scproot='scp -S ~/.ssh/ssh-wrapper'
alias standby='sudo pm-suspend'
alias night='sudo echo 30 > /sys/class/backlight/intel_backlight/brightness | redshift-gtk'
alias movieon='xsetroot -solid "#000000" |  variety --pause'
alias movieoff='xsetroot -solid "#000000"| variety --resume'
alias archenv='/home/ben/GitHub/ansible-arch-env/ansible_local_setup.sh -i ,'
alias t='mosh seedbox.copeland.me.uk'
# Work
alias cli53export='cli53 export linaro.org'
alias cli53add='cli53 rrcreate linaro.org'
alias cli53del='cli53 rrdelete linaro.org'
alias cli53add96='cli53 rrcreate 96boards.org'
alias cli53addodp='cli53 rrcreate opendataplane.org'
alias gv='git-review'
alias gv-amend='git add . && git commit --amend --no-edit && git-review'

# Laptop Screen modes
alias set-work='/home/ben/.screenlayout/external_work.sh'
alias set-home='/home/ben/.screenlayout/external_home.sh'
alias set-home-hdmi='/home/ben/.screenlayout/external_home_hdmi.sh'
alias set-home-dp-hdmi='/home/ben/.screenlayout/external_home_dp_hdmi_home.sh'
alias set-laptop='/home/ben/.screenlayout/laptop.sh'
alias set-home-dp='/home/ben/.screenlayout/external_home_dp.sh'
alias ffs='sudo systemctl restart wpa_supplicant && sudo systemctl restart NetworkManager'
alias logj='sudo journalctl -f'

# Pycharm
export _JAVA_OPTIONS='-Dawt.useSystemAAFontSettings=setting'

# Docker
alias diclean='docker rmi $(docker images -q)'
# Containers
alias dclean='docker rm $(docker ps -a -q)'

alias rc='systemctl --user restart rclone.service'
